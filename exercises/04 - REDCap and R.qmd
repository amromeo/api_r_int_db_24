---
title: "REDCap and R"
format: html
editor: visual
---

## Downloading data with REDCapR

The following code chunk will use the **REDCapR** package to connect to a REDCap database and download its data into an object called `my_redcap_data`. Run the code chunk.

```{r}
library(REDCapR)

creds <- retrieve_credential_local("../data-private/credentials.csv", 1)

uri <- creds$redcap_uri
token <- creds$token

my_redcap_data <- redcap_read_oneshot(uri, token)$data
```

When this runs successfully, it will give you a message that [looks like an error]{style="color:red"} but is really just a status message. The HTTP status code "200" means "success."

So if this ran without an error, pat yourself on the back! You just used R to access the REDCap API via REDCapR and downloaded a project into the data frame named `my_redcap_data`. Pretty cool!

![](https://png.pngtree.com/png-vector/20220612/ourmid/pngtree-stop-here-halt-end-stoppage-vector-png-image_13876140.png){style="display: block; margin-left: auto; margin-right: auto" width="218"}

## Extracting Data from REDCap using REDCapTidieR

In this exercise, we will download REDCap data using REDCapTidier (as opposed to REDCapR) and then explore that data using the Posit IDE.

```{r}
library(REDCapTidieR)

# Load credentials from CSV file
creds <- REDCapR::retrieve_credential_local("../data-private/credentials.csv", 1)

uri <- creds$redcap_uri
token <- creds$token

# Read the CAR-T cell REDCap data into an object named "redcart"
redcart <- read_redcap(uri, token)

# Show me redcart!
redcart
```

## Exploring the REDCapTidieR Supertibble

Take a look at the *Environment* pane to the right. Note that there is an object named `redcart`. This is the **supertibble** you just created inside of R's memory. (If you don't see `redcart`, try running the code chunk above again).

A **tibble** (or **data frame**) is a tabular data structure with rows and columns, similar to a SQL database or an Excel sheet. A **supertibble** is a tibble that contains tibbles. This is a special data structure that is useful to represent a REDCap project.

Look again at the *Environment* pane. On the far right next to `redcart`, you will spot an small icon that looks like a table. Click on it to make the *Data Viewer* appear.

The *Data Viewer* is a handy way to explore tibble built into the Posit IDE.

Go ahead an explore `redcart` to confirm the following features of the supertibble:

1.  Each row represents a REDCap instrument.
2.  In addition to the instrument's name, useful instrument-level metadata is shown here.
3.  The `redcap_data` column contains tibbles (note the little table icons!)
4.  By clicking on a tibble object inside the `redcap_data` column you can *drill down* and view the data stored in a specific REDCap instrument.

Without writing any code, just by working in the *Data Viewer*, try to answer the following questions:

1.  How many instruments are in the `redcart` database? **18**

2.  How many rows are in the `demographics` table? **14**

3.  Is the `consent` instrument repeating or nonrepeating? How can you tell? Why or why not? **repeating - allows capturing re-consenting after consent version changes**

4.  Drill down into the `demographics` instrument. How many patients are captured in here? Who is the oldest patient on the trial? **14 patients. Arya Stark is oldest.**

**NOTE: Studies have shown that explaining material you just learned to others can boost memory. So if you're done early, you might want to get up and help out others! :)**

## Extracting a Tibble from the Supertibble

You can easily extract a single data frame or tibble from the supertibble using the `extract_tibble()` function. For example, to pull out the `demographics` tibble, you might write:

```{r}
demographics <- redcart |>
  extract_tibble("demographics")
```

Run the code chunk above and confirm that there is now a `demographics` object in the Environment that contains the demographics of the patients on the REDCART trial.

Note that REDCapTidieR is built to support tidyverse-style data pipelines with the pipe operator (both the "old" and the "new" pipe work).

## Adding Labels to the Supertibble

## Exporting the Supertibble to Excel
