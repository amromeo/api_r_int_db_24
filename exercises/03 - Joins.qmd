---
title: "Joins"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

## Need for Joins

```{r}
library(tidyverse)
library(DBI)
library(RSQLite)
library(connections)

con <- dbConnect(RSQLite::SQLite(), "/cloud/project/mimic4.db")
# con <- dbConnect(RSQLite::SQLite(), dbname = "mimic_database.sqlite")

connection_view(con)  # Remove if we are not pursuing the connections pane
```


```{r}
# This is really more appriorpiate for patrick's talk i think

dbListTables(conn = con)

dbListFields(con,"LABEVENTS")

labevents <- dbReadTable(con, "LABEVENTS")

```

## Set up need for joins

Question: What is the most commonly ordered lab?

```{r}
# Without Joins
db_lab_events <- tbl(con, "LABEVENTS")
db_lab_items <- tbl(con, "D_LABITEMS")
db_patients <- tbl(con, "PATIENTS")
# Will they be familiar with this table at this point? if no may need to look at table, fields, etc.
```

```{r}
top_itemid <- db_lab_events |> 
  count(itemid) |>
  slice_max(n) |>
  pull(itemid)

top_itemid
```


```{r}
lab_items |>
  filter(itemid == top_itemid)
```

But what if you wanted to do all the labs.....

## Joins

Joins are a way to merge data, in particular tabular data like data frames. There are a large number of join types that are variably used depending on what you are trying to accomplish. 

### Left Joins

```{r}
db_patients |>
  left_join(db_lab_events, join_by(subject_id)) |>
  filter(is.na(index.y))
  filter(is.na(dod)) |>
  collect()

```

#### Your Turn 4
