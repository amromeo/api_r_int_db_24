---
title: "Joins"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

## Introduction

Run the setup chunk below to load the packages we need for the session.

```{r setup}
library(tidyverse)
library(DBI)
library(RSQLite)
library(connections)
```

Connect to the MIMIC IV database

```{r connect}
mimic <- dbConnect(drv = RSQLite::SQLite(), 
                 dbname = "../mimic4.db")

connection_view(mimic)  # Necessary to view SQLite database tables in the Connections pane
```

Establish connection tables needed for the session.

```{r con_tables}
labevents <- tbl(mimic, "LABEVENTS")
d_labitems <- tbl(mimic, "D_LABITEMS")
patients <- tbl(mimic, "PATIENTS")
```

#### Exercise 1a:

CAP is inspecting your lab and one of the inspectors asked your chair what your top performed test is.

Your chair surreptitiously texts you as he distracts the inspector with some free Nespresso……

Connect to the MIMIC IV database and answer:

**What the most commonly ordered lab test is in the database?**

*HINT: Analytic Strategy:*

1.  *Connect to the LABEVENTS table*

2.  *Count the number of rows per itemid*

3.  *Arrange from large to smallest count*

4.  *Top row is the winner!*

```{r exercise_1a}
## Review - Create a new table object *labevents* that connects to the labevents MIMIC-IV table.
labevents <- tbl(___, ______)

## Create a pipe that starts from labevents database table and determines which itemid was ordered most frequently (This exercise reviews an exercise from Lesson 2)
labevents |>

  
```

Based on the above you should have identified the lab order associated with itemid 50971 as the most frequently ordered test.

But what is that lab test?

You can determine this using the tools you already know.

1.  Find 50971 in the View pane for D_LABITEMS

2.  Connect to D_LABITEMS and use `filter` to 50971.

### Exercise 1b:

Use one of the strategies above to determine what the most frequently ordered lab test is.

**But what if you needed to know what the *top 100* test orders were?**

## Joins

Joins are a mechanism to merge together data from two different tables that contain related data. In our example the labevents table and the d_labitems tables are related. The former contains information about each lab order placed in the EHR. the d_labitems table has metadata about each of the kinds of lab orders that can be placed in the EMR. On a more concrete level, the 'itemid' columns in both tables hold matching values, which means that an 'itemid' in one table signifies the same lab order type as the same 'itemid' in the other table.

### Inner Join

An inner join:

-   Retains only rows that match in both tables.
-   Excludes rows without matches in both tables.
-   Combines columns from both tables.

A prototypical left_join() function in R is structured like this:

```{r inner_join_template}
left_join(df1,df2,join_by(shared_column))
```

We can use this function to bring in the metadata relating to the lab orders in order to decode the itemid's

```{r inner_join_example}
inner_join(labevents,d_labitems,join_by(itemid))
```

### Exercise 2

Starting with labevents, join to the d_labitems table using inner_join. Assign the result of your functions to labevents_n

Find the number of times each lab order was placed

```{r exercise_2a}
labevents_n <- labevents |>

```

Follow-up questions: - Examine the original labevents table. - How many distinct itemid's (test order types) does it have?

-   Examine the labevents_n table you produced.
-   How many distinct itemid's (test order types) does it have?

```{r exercise_2b}
labevents |>
  
labevents_n |>

```

### Left Join

A left join:

-   Retains every row from the left table.
-   Includes only matching rows from the right table.
-   Combines columns from both tables.

### Left Joins

```{r}
db_patients |>
  left_join(db_lab_events, join_by(subject_id)) |>
  filter(is.na(index.y))
  filter(is.na(dod)) |>
  collect()

```

### Inner Join

#### Your Turn 4

```{r}
db_lab_events <- tbl(con, "LABEVENTS")
db_lab_items <- tbl(con, "D_LABITEMS")
db_patients <- tbl(con, "PATIENTS")
db_diagnoses <- tbl(con,"DIAGNOSES_ICD")
```

```{r}
db_lab_events |>
  inner_join(db_lab_items,join_by(itemid)) |>
  filter(label == "Schistocytes") |>
  distinct(subject_id) |>
  inner_join(db_diagnoses, join_by(subject_id)) |>
  arrange(subject_id,icd_code) |>
  collect() |>
  View()
```

```{r}
db_lab_events |>
  inner_join(db_lab_items,join_by(itemid)) |>
  filter(label == "Schistocytes") |>
  arrange(subject_id) |>
  collect()
```

```{r}
db_diagnoses |>
  arrange(subject_id, icd_code) |>
  collect()
```
